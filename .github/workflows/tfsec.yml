name: tfsec
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        
      - name: tfsec for critical/high risk security issues
        id: tfsec_summary
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          format: markdown
          additional_args: --minimum-severity HIGH --run-statistics
        env:
          ACTIONS_STEP_DEBUG: true
          
      - name: Comment PR Summary
        uses: actions/github-script@v4
        if: always()
        with:
          script: |
            const parse_output = '${{ steps.tfsec_summary.outputs }}'
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The following security issues were detected in the terraform file(s):<br><br>${parse_output}`
            })
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: tfsec
        id: run_sectest
        uses: aquasecurity/tfsec-action@v1.0.0
        if: always()
        with:
          soft_fail: true
          format: json
          additional_args: --out results.json 
        env:
          ACTIONS_STEP_DEBUG: true

      - name: output
        if: always()
        run: cat results.json

      - name: parse output
        id: parse_output
        if: always()
        run: |
          echo ::set-output name=parse_output::$(jq -r '.results[] | ". The issue ^^ \(.rule_description) ^^ was detected in the file ^^ \(.location.filename) ^^ between the lines <u>\(.location.start_line)</u> and <u>\(.location.end_line).</u><br>"' results.json | nl)

      - name: Comment PR
        uses: actions/github-script@v4
        if: always()
        with:
          script: |
            const parse_output = '${{ steps.parse_output.outputs.parse_output }}'
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The following security issues were detected in the terraform file(s):<br><br>${parse_output}`
            })
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Delete Results file
        if: always()
        run: rm -f results.json
