name: tfsec
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        
      - name: tfsec for critical/high risk security issues
        id: tfsec_summary
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          format: json
          additional_args: --minimum-severity HIGH
        env:
          ACTIONS_STEP_DEBUG: true

      - name: tfsec
        id: run_sectest
        uses: aquasecurity/tfsec-action@v1.0.0
        if: always()
        with:
          soft_fail: true
          format: json
          additional_args: --out results.json 
        env:
          ACTIONS_STEP_DEBUG: true

      - name: parse output
        id: parse_output
        if: always()
        run: |
          echo ::set-output name=parse_output::$(jq -r '.results[] | ". The issue ^^ \(.rule_description) ^^ was detected in the file ^^ \(.location.filename) ^^ between the lines <u>\(.location.start_line)</u> and <u>\(.location.end_line).</u><br>"' results.json | nl)

      - name: Comment PR
        uses: actions/github-script@v4
        if: always()
        with:
          script: |
            const parse_output = '${{ steps.parse_output.outputs.parse_output }}'
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The following security issues were detected in the terraform file(s):<br><br>${parse_output}`
            })
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Delete summary file
        if: always()
        run: rm -f summary_table.md
          
      - name: Create Summary Table
        if: always()
        id: summary_table
        run: |
          severity_counts=`jq -r '.results | group_by(.severity) | map({severity: .[0].severity, count: length, order: {"HIGH": 3, "MEDIUM": 2, "LOW": 1}[.[0].severity]}) | sort_by(-.order)' results.json`
          echo "Severity | Count" > summary_table.md
          echo "-------- | -----" >> summary_table.md
          echo "$severity_counts" | awk '{printf "%-8s | %-5d\n", $1, $2}' >> summary_table.md
          echo "$severity_counts"
          cat summary_table.md
        shell: bash

      - name: Comment PR with Summary Table
        if: always()
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require('fs');
            const table = fs.readFileSync('summary_table.md', 'utf8');
            const severityCounts = fs.readFileSync('results.json', 'utf8');
            const countsBySeverity = [JSON.parse(severityCounts)]
              .reduce((acc, val) => {
                acc[val.severity] = acc[val.severity] + 1 || 1;
                return acc;
              }, {});

            const prBody = `## Summary Table\n\n${table}\n\n`;
            const prBodyWithCounts = Object.entries(countsBySeverity)
              .sort((a, b) => a[0].localeCompare(b[0]))
              .reduce((acc, [severity, count]) => {
                return `${acc}${severity}: ${count}\n`;
              }, prBody);

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: prBodyWithCounts
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Results file
        if: always()
        run: rm -f results.json

